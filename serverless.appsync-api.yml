name: appsyncmarketplace
schema: schema.api.graphql
authenticationType: AMAZON_COGNITO_USER_POOLS
userPoolConfig:
  awsRegion: eu-west-1
  defaultAction: ALLOW
  userPoolId: !Ref CognitoUserPool
mappingTemplatesLocation: mapping-templates
mappingTemplates:
  # Queries
  - type: Query
    field: getMyProfile
    dataSource: usersTable
  - type: Query
    field: getProfile
    dataSource: usersTable
  - type: Query
    field: listCategories
    dataSource: categoryTable
  - type: Query
    field: listProducts
    dataSource: productsTable
  - type: Query
    field: getProduct
    dataSource: productsTable
  - type: Query
    field: listBasketItems
    dataSource: basketTable
  - type: Query
    field: listMyOrders
    dataSource: orderTable
  
  # Mutation
  - type: Mutation
    field: addCategory
    dataSource: categoryTable
  - type: Mutation
    field: updateCategory
    dataSource: categoryTable
  - type: Mutation
    field: deleteCategory
    dataSource: categoryTable
  - type: Mutation
    field: uploadProduct
    dataSource: uploadProductFunction
    request: false
    response: false
  - type: Mutation
    field: addReview
    dataSource: addReviewFunction
    request: false
    response: false
  - type: Mutation
    field: addToBasket
    dataSource: basketTable
  - type: Mutation
    field: deleteProduct
    dataSource: productsTable
  - type: Mutation
    field: addShipper
    dataSource: shipperTable
  - type: Mutation
    field: removeFromBasket
    dataSource: basketTable
  - type: Mutation
    field: changeOrderStatus
    dataSource: orderTable
  - type: Mutation
    field: placeOrder
    dataSource: placeOrderFunction
    request: false
    response: false

  # Nested Fields
  - type: Category
    field: creator
    dataSource: usersTable
    request: Category.creator.request.vtl
    response: Category.creator.response.vtl
  - type: Product
    field: uploader
    dataSource: usersTable
    request: Product.uploader.request.vtl
    response: Product.uploader.response.vtl
  - type: Product
    field: category
    dataSource: categoryTable
    request: Product.category.request.vtl
    response: Product.category.response.vtl
  - type: Product
    field: reviews
    dataSource: reviewsTable
    request: Product.reviews.request.vtl
    response: Product.reviews.response.vtl
  - type: OrderItem
    field: product
    dataSource: productsTable
    request: OrderItem.product.request.vtl
    response: OrderItem.product.response.vtl
  - type: Order
    field: creator
    dataSource: usersTable
    request: Category.creator.request.vtl
    response: Category.creator.response.vtl
  - type: Order
    field: shipping
    dataSource: shipperTable
    request: Order.shipping.request.vtl
    response: Order.shipping.response.vtl

dataSources:
  - type: NONE
    name: none
  - type: AMAZON_DYNAMODB
    name: usersTable
    config:
      tableName: !Ref UsersTable
  - type: AMAZON_DYNAMODB
    name: categoryTable
    config:
      tableName: !Ref CategoryTable
  - type: AMAZON_DYNAMODB
    name: productsTable
    config:
      tableName: !Ref ProductsTable
  - type: AMAZON_DYNAMODB
    name: reviewsTable
    config:
      tableName: !Ref ReviewsTable
  - type: AMAZON_DYNAMODB
    name: basketTable
    config:
      tableName: !Ref BasketTable
  - type: AMAZON_DYNAMODB
    name: shipperTable
    config:
      tableName: !Ref ShippperTable
  - type: AMAZON_DYNAMODB
    name: orderTable
    config:
      tableName: !Ref OrderTable
  - type: AWS_LAMBDA
    name: uploadProductFunction
    config:
      functionName: uploadProduct
  - type: AWS_LAMBDA
    name: addReviewFunction
    config:
      functionName: addReview
  - type: AWS_LAMBDA
    name: placeOrderFunction
    config:
      functionName: placeOrder
 
substitutions:
  ReviewsTable: !Ref ReviewsTable